#!/bin/bash

# Script para monitoramento cont√≠nuo de logs do CostsHub
# √ötil durante desenvolvimento para debug em tempo real

echo "üîç MONITOR DE LOGS CONT√çNUO - CostsHub"
echo "====================================="
echo ""

# Cores para melhor visualiza√ß√£o
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Fun√ß√£o para colorir logs baseado no tipo
colorize_log() {
    while IFS= read -r line; do
        case "$line" in
            *"ERROR"*|*"‚ùå"*)
                echo -e "${RED}$line${NC}"
                ;;
            *"WARNING"*|*"‚ö†Ô∏è"*)
                echo -e "${YELLOW}$line${NC}"
                ;;
            *"INFO"*|*"‚úÖ"*)
                echo -e "${GREEN}$line${NC}"
                ;;
            *"DEBUG"*|*"üîç"*)
                echo -e "${CYAN}$line${NC}"
                ;;
            *"üìß"*|*"email"*|*"Email"*)
                echo -e "${PURPLE}$line${NC}"
                ;;
            *"üîÑ"*|*"convite"*|*"invite"*)
                echo -e "${BLUE}$line${NC}"
                ;;
            *)
                echo "$line"
                ;;
        esac
    done
}

# Verificar se o arquivo de log existe
LOG_FILE="backend.log"

if [ ! -f "$LOG_FILE" ]; then
    echo "‚ùå Arquivo de log n√£o encontrado: $LOG_FILE"
    echo "üí° Certifique-se de que o backend est√° rodando"
    exit 1
fi

echo "üìã Monitorando: $LOG_FILE"
echo "üéØ Foco em: Emails, Convites, Erros e Warnings"
echo "‚å®Ô∏è  Pressione Ctrl+C para parar"
echo ""
echo "====================================="
echo ""

# Mostrar as √∫ltimas 10 linhas primeiro
echo "üìú √öLTIMAS 10 LINHAS:"
echo "---------------------"
tail -10 "$LOG_FILE" | colorize_log
echo ""
echo "üîÑ MONITORAMENTO EM TEMPO REAL:"
echo "--------------------------------"

# Monitorar em tempo real com coloriza√ß√£o
tail -f "$LOG_FILE" | colorize_log
