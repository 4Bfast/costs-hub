// SCRIPT DE DEBUG PARA ANALYSISVIEW
// Cole este c√≥digo no console do navegador quando estiver na p√°gina de An√°lise

console.log("üîç DEBUG: ANALYSISVIEW - CARREGAMENTO DE CONTAS AWS");
console.log("=" * 60);

// 1. Verificar se estamos na p√°gina correta
console.log("üìç URL atual:", window.location.href);

// 2. Verificar se o token existe
const token = localStorage.getItem('auth_token');
console.log("üîë Token existe:", !!token);
if (token) {
  console.log("üîë Token (primeiros 20 chars):", token.substring(0, 20) + "...");
} else {
  console.error("‚ùå PROBLEMA: Nenhum token encontrado no localStorage");
  console.log("üí° SOLU√á√ÉO: Fa√ßa login novamente");
}

// 3. Verificar se o store de auth est√° funcionando
try {
  // Tentar acessar o store Pinia
  const stores = window.__VUE_DEVTOOLS_GLOBAL_HOOK__?.apps?.[0]?.config?.globalProperties?.$pinia?._s;
  if (stores) {
    const authStore = stores.get('auth');
    if (authStore) {
      console.log("‚úÖ Store de auth encontrado");
      console.log("üîê isAuthenticated:", authStore.isAuthenticated);
      console.log("üë§ User:", authStore.user);
    } else {
      console.error("‚ùå Store de auth n√£o encontrado");
    }
  }
} catch (error) {
  console.log("‚ö†Ô∏è N√£o foi poss√≠vel acessar o store via DevTools");
}

// 4. Testar requisi√ß√£o direta para /aws-accounts
console.log("\nüì° TESTANDO REQUISI√á√ÉO PARA /aws-accounts");
fetch('http://localhost:5000/api/v1/aws-accounts', {
  method: 'GET',
  headers: {
    'Content-Type': 'application/json',
    'Authorization': `Bearer ${token}`
  }
})
.then(response => {
  console.log("üìä Status da resposta:", response.status, response.statusText);
  
  if (response.status === 401) {
    console.error("‚ùå PROBLEMA: Token inv√°lido ou expirado (401)");
    console.log("üí° SOLU√á√ÉO: Fa√ßa logout e login novamente");
  } else if (response.status === 403) {
    console.error("‚ùå PROBLEMA: Acesso negado (403)");
    console.log("üí° SOLU√á√ÉO: Verificar permiss√µes do usu√°rio");
  } else if (response.status === 404) {
    console.error("‚ùå PROBLEMA: Endpoint n√£o encontrado (404)");
    console.log("üí° SOLU√á√ÉO: Verificar se o backend est√° rodando");
  }
  
  return response.json();
})
.then(data => {
  console.log("‚úÖ Dados recebidos:", data);
  
  if (Array.isArray(data)) {
    console.log("üìà N√∫mero de contas AWS:", data.length);
    
    if (data.length === 0) {
      console.warn("‚ö†Ô∏è PROBLEMA: Nenhuma conta AWS cadastrada");
      console.log("üí° SOLU√á√ÉO: V√° em Configura√ß√µes e adicione uma conta AWS");
    } else {
      console.log("üìã Contas encontradas:");
      data.forEach((account, index) => {
        console.log(`   ${index + 1}. ${account.account_name} (ID: ${account.id})`);
      });
    }
  } else {
    console.error("‚ùå PROBLEMA: Resposta n√£o √© um array");
  }
})
.catch(error => {
  console.error("‚ùå ERRO na requisi√ß√£o:", error);
  
  if (error.message.includes('Failed to fetch')) {
    console.error("‚ùå PROBLEMA: N√£o conseguiu conectar com o backend");
    console.log("üí° SOLU√á√ÉO: Verificar se o backend est√° rodando na porta 5000");
  } else if (error.message.includes('CORS')) {
    console.error("‚ùå PROBLEMA: Erro de CORS");
    console.log("üí° SOLU√á√ÉO: Verificar configura√ß√£o CORS no backend");
  }
});

// 5. Verificar se h√° erros no console
console.log("\nüîç VERIFICANDO ERROS NO CONSOLE");
console.log("Abra a aba Console e procure por erros em vermelho");
console.log("Erros comuns:");
console.log("‚Ä¢ 401 Unauthorized - Token inv√°lido");
console.log("‚Ä¢ 403 Forbidden - Sem permiss√£o");
console.log("‚Ä¢ 404 Not Found - Endpoint n√£o existe");
console.log("‚Ä¢ CORS error - Problema de CORS");
console.log("‚Ä¢ Network error - Backend n√£o est√° rodando");

// 6. Verificar Network tab
console.log("\nüåê VERIFICANDO NETWORK TAB");
console.log("1. Abra DevTools (F12)");
console.log("2. V√° para a aba Network");
console.log("3. Recarregue a p√°gina");
console.log("4. Procure por requisi√ß√µes para 'aws-accounts'");
console.log("5. Clique na requisi√ß√£o e veja:");
console.log("   ‚Ä¢ Status code");
console.log("   ‚Ä¢ Request headers (Authorization)");
console.log("   ‚Ä¢ Response body");

console.log("\nüéØ RESUMO DO DEBUG CONCLU√çDO");
console.log("Verifique os resultados acima para identificar o problema");
